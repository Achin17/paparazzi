<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan
        name="Flight Plan"
        lat0="51.990634" lon0="4.376789"
        ground_alt="0"
        security_height="0.4"
        max_dist_from_home="8"
        alt="2.0">

  <header>
    #include "guidance/guidance_h.h"
    #include "guidance/guidance_v.h"
    #include "modules/flight_plan_guided/flight_plan_guided.h"
    #include "subsystems/datalink/datalink.h"
    #include "subsystems/radio_control.h"
  </header>

  <waypoints>
    <!-- Mission waypoints -->
    <waypoint name="HOME" x="0.0" y="0.0"/>
  </waypoints>

  <exceptions>
    <exception cond="datalink_time > 5" deroute="Land here"/>
    <exception cond="radio_control.status == RC_REALLY_LOST" deroute="Land here"/>
    <exception cond="stateGetPositionEnu_f()->z > 8." deroute="Land here"/>
  </exceptions>

  <blocks>
    <block name="Wait">
      <while cond="1"/>
    </block>

    <!-- Wait 5 seconds and then set altitude reference -->
    <block name="Geo init">
      <call_once fun="ResetAlt()"/>
      <while cond="1"/>
    </block>

    <block name="Hover">
      <call fun="Hover(nom_flight_alt)"/>
      <while cond="1"/>
    </block>

    <block name="Fly into window and out of window (position)">
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="win_state = 0"/>
      <call fun="fly_through_window(SNAKE_WINDOW)"/>
      <call_once fun="detector_disable_all()"/>
      <call_once fun="guidance_h_set_guided_pos_relative(filtered_x_gate - 1.5, filtered_y_gate)"/>
      <while cond="10 > block_time"/>
      <deroute block="Hover"/>
    </block>

    
    <block name="Fly into and out of window (velocity)">
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="win_state = 0"/>
      <call fun="fly_through_window(SNAKE_WINDOW)"/>
      <call_once fun="detector_disable_all()"/>
      <call_once fun="guidance_h_set_guided_body_vel(-0.3, 0)"/>
      <while cond="6 > block_time"/>
      <deroute block="Hover"/>
    </block>

    
    <block name="Survey Room">
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="guidance_h_set_guided_pos_relative(6., 0.)"/>
      <while cond="25 > block_time"/>
      <call_once fun="guidance_h_set_guided_heading_rate(0.25)"/>
      <while cond="14 > block_time"/>
      <deroute block="Hover"/>
    </block>

    <block name="Take-off">
      <call_once fun="ResetAlt()"/>
      <call_once fun="initial_heading = stateGetNedToBodyEulers_f()->psi"/>
      <call fun="StartEngines()"/>
      <call fun="TakeOff(1.0)"/>
      <call fun="WaitUntilAltitude(nom_flight_alt - 0.2)"/>
      <deroute block="Hover after take-off"/>
    </block>

    <block name="TakeOffEnthusiastically">
      <call_once fun="ResetAlt()"/>
      <call_once fun="ResetSpecialTimer()"/>
      <call fun="StartEngines()"/>
      <call fun="LiftOff(0.85)"/>
      <call fun="WaitUntilTimerOrAltitude(0.9f,6.0f)"/><!-- sec, meter(failsafe) -->
      <deroute block="Hover after take-off"/>
    </block>
    
    <block name="Hover after take-off">
      <call_once fun="Hover(3)"/>
      <call_once fun="guidance_h_set_guided_heading(initial_heading)"/>
      <while cond="2 > block_time"/>
    </block>
    
    <!-- takeoff, set initial_heading-->
    <block name="Fly to House">
      <call_once fun="guidance_h_set_guided_body_vel(0.3, 0.1)"/>
      <call_once fun="guidance_v_set_guided_z(nom_flight_alt)"/>
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="win_state = 0"/>
      <call fun="fly_through_window(SNAKE_WINDOW)"/>
      <call_once fun="detector_disable_all()"/>
      <call_once fun="guidance_h_set_guided_pos_relative(filtered_x_gate - 1.5, filtered_y_gate)"/>
      <while cond="10 > block_time"/>
    </block>
    
    <block name="Move to Landing pad">
      <call_once fun="guidance_h_set_guided_heading_relative(22./7.)"/>
      <call_once fun="guidance_h_set_guided_body_vel(0.3, 0.1)"/>
      <call_once fun="guidance_v_set_guided_vz(0.3)"/>
      <call fun="WaitUntilMarker()"/>
    </block>
    
    <block name="Find Landing pad">
      <call_once fun="detector.bottom_red_item->active = true"/>
      <call_once fun="landing_state = 0"/>
      <call_once fun="Decend_on_landing_pad(1.5)"/>
    </block>
    
    <block name="Land on platform">
      <call_once fun="Decend_on_landing_pad(1.5)"/>
    </block>

    <block name="Approach building">
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="detector.front_white_building->active = true"/>
      <call_once fun="object_state = 0"/>
      <set var="max_pixel_building" value="1000"/> <!-- max amount of pixels that the building need to exceed (MAKE A SETTING FROM THIS)-->
      <set var="approach_white_building" value="true"/>  
      <call fun="go_to_object(false)"/>  <!-- go to the building until a pixel count is reached (CALIBRATE THIS!!)-->
      <set var="approach_white_building" value="false"/>
      <!-- TODO: now it goes untill  it sees the bottom camera... how to stop this? -->
    </block>

    <block name="Fly through entrance">
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="win_state = 0"/>
      <set var="disable_sideways_forcefield" value="true"/>
      <call fun="fly_through_window(SNAKE_WINDOW)"/>
      <set var="disable_sideways_forcefield" value="false"/>
    </block>

    <block name="Find and land at red item">
      <call_once fun="front_cam_set_x_offset(512)"/>
      <call_once fun="detector_disable_all()"/>
      <call_once fun="detector.front_red_item->active = true"/>
      <call_once fun="detector.bottom_red_item->active = true"/>
      <call_once fun="open_gripper()"/>
      <call_once fun="object_state = 0"/>
      <call fun="go_to_object(true)"/>
    </block>

    <block name="Grab red item">
      <call_once fun="close_gripper()"/>
      <while cond="2 > block_time"/>
    </block>

    <block name="Lift up red item">
      <call_once fun="TakeOff(0.2)"/>
      <while cond="2 > block_time"/>
    </block>

    <block name="Take-off from red item">
      <call fun="Hover(nom_flight_alt)"/>
      <while cond="1"/>
      <!-- TODO: exception conditions (check if item is grabbed) -->
    </block>


    <block name="Find and fly through window">
    <!-- TODO: determine in what heading the door is and turn to it-->
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="win_state = 0"/>
      <call_once fun="guidance_h_set_guided_heading_rate(0.5)"/>
      <call fun="fly_through_window(SNAKE_WINDOW)"/>
    </block>

    <block name="Locate landing platform">
      <call_once fun="detector_disable_all()"/>
      <call_once fun="front_cam_set_x_offset(896)"/>
      <call_once fun="detector.helipad_bottom->active = true"/>
      <!-- TODO -->
    </block>

    <block name="Approach landing platform">
      <!-- TODO -->
    </block>

    <block name="Land">
      <!-- TODO -->
    </block>

    <block name = "Disable Snake Gate">
       <call_once fun="snake_gate_detection_snake_gate_detection_periodic_status = MODULES_STOP"/>
       <while cond="1"/>
    </block>
    
    <block name="TESTING - Hover forever">
      <call fun="Hover(nom_flight_alt)"/>
      <while cond="1"/>
    </block>

    <block name="TESTING - Hover over red bucket">
      <call_once fun="detector_disable_all()"/>
      <call_once fun="detector.bottom_red_bucket->active = true"/>
      <call fun="Hover(nom_flight_alt)"/>
      <call fun="marker_center_descent(0, 0, 0)"/>
    </block>

    <block name="TESTING - Open gripper">
      <call_once fun="open_gripper()"/>
      <while cond="1"/>
    </block>

    <block name="TESTING - Close gripper">
      <call_once fun="close_gripper()"/>
      <while cond="1"/>
    </block>

    <block name="TESTING - Open gripper and return to hover">
      <call_once fun="open_gripper()"/>
      <deroute block="TESTING - Hover over red bucket"/>
    </block>
    <block name = "TESTING - Wall Following Right Side">
      <exception cond="range_finders.right > 3000" deroute="TESTING - Turn To Door Right Side"/>
    </block>

    <block name = "TESTING - Turn To Door Right Side">
       <call fun="guidance_h_set_guided_pos_relative(0.5,0.0)"/>
       <call fun="RotateToHeading(stateGetNedToBodyEulers_f()->psi+DegOfRad(90))"/>
      <!--deroute block="Hover"/-->
    </block>
    
    <block name = "Land here">
       <call fun="guidance_h_set_guided_pos_relative(0.,0.)"/>
       <call fun="guidance_v_set_guided_th(0.4)"/>
      <!--deroute block="Hover"/-->
    </block>
    
  </blocks>



</flight_plan>
