<!DOCTYPE airframe SYSTEM "../airframe.dtd">

<airframe name="Outback">
  <description>
* Garantie tot de Deur, special edition...
* Parrot Disco flying on experimental Hybrid Code (https://www.mavlab.info/)
+ Airframe to validate all onboard functionally...
  Parrot Disco
     + Autopilot:   Default Parrot C.H.U.C.K.
     + Actuators:   Default Disco servos
     + GPS:         Default uBlox M8N GNSS
     + AIRSPEED:    Default MS4515DO
     + TELEMETRY:   Default WiFi
     + CURRENT:     Default Build in V/A sensing
     + RC RX:       Added a receiver with SBUS out

 NOTES:

     + Hey, calibrate your magneto! Yes, you too ;), unit UKF auto works...
     + All kinds of info https://fccid.io/2AG6I-DISCO
     + Uses PAPARAZZI "standard" radio channel settings, see TU Delft Devo 10 output
     + One could make a flightplan mimicing exact default behaviour of Parrot assisted flight
     + Tested with Firmware v1.7.1, should work on v1.4.1 and v1.7.0
     + Uses Enhanced DelftaCopter nifty new stuff for control
     + Flash the firmware via WiFi or USB
     + Enlarged battery bay ,and option fit a 5200 mAh 3S battery. The all-up weight (AUW)) of the airframe will be  ~150g more
       Center of gravity still the same, flighttime doubles...
     + Regular Telemetry is possible via USB to FTDI serial to Modem, added kernel drivers in another OpenUAS project
     + Bottom camera can used just for some mapping, not high resolution but still fun...
     + The Parrot C.H.U.C.K. can be removed and placed in a regular plane also
     + Added 12c 5200mAh battery, expect flighttimes of 52minutes at 15m/s
     + PPRZLink v2 advised for tcas fun

 WIP:
     + Not even flown once...
     + The front cam is not yet supported with internal code, however successful video recording, streaming already possible with current module
     + Sonar needs some TLC and then put to good use e.g. last part of flare in landing

 RC:
     The RC receiver make sure to set modeswitch to Auto2 on your TX when binding!
     else if one would lose RC or switch of transmitter during Auto2 flight, it will hop to manual.. very bad...

     A PPM receiver could theoretically be used, only for Linux ARCH no software to handle it is written (hint!)
     SUMD also. For the PPRZ Spektum could also, but not if you also want to fly it with RC but without PPRZ as AP only original
     since Spektrum serial is not handled by the Parrot main AP

     The setup ot Transmitter is in such a way that one could fly without PPRC just Parrot with a 3rd party transmitter
     Thus modeswitch on 5 for well.. mode

     TX Channel Nr  Function                        Control type        Comments
     1              Roll                            Stick
     2              Pitch                           Stick
     3              Throttle                        Stick
     4              Yaw                             Stick               Used to set the Disco in loiter
     5              Gear                            3-position switch   Used to configure the piloting mode:
                      Auto-pilot with Parrot SkyController2 (Risky so better limit this one exept if you teaching people to fly with Skycontroller student AND RCTX for teacher )
                      Auto-pilot with RC controller
                      Full manual with RC controller
     6              Automatic Take-off/Landing      2-position trainer switch Used in “Auto-pilot with RC controller” mode
                    Start: SWx    Landing: SWy
                    Motor off in manual mode    SW?
  </description>

<!-- ********************** For in the real flying hardware ******************** -->

  <firmware name="rotorcraft"> <!-- Debatable ;) -->
    <!-- AP (autopilot) part of the board -->
    <target name="ap" board="disco">

    <!-- Towards a better and no messing it all up kind of aligner -->
      <!--
      <define name="AHRS_ALIGNER_SAMPLES_NB" value="200"/>
      <define name="LOW_NOISE_THRESHOLD" value="30000"/>
      <define name="LOW_NOISE_TIME" value="10"/>
      -->

      <!--<configure name="FLASH_MODE" value="USB"/>--><!-- TODO: WIFI or USB-->
      <!-- WIP: Front Camera parameters -->
      <define name="H264_ROTATE" value="TRUE"/>
      <define name="MT9F002_INITIAL_OFFSET_X" value="416+2704-480"/> <!-- 480 / 960 / 1920 / 3840 (horion for theta = 0 -> 2704) -->
      <define name="MT9F002_INITIAL_OFFSET_Y" value="1680-1040"/> <!-- 420 / 840 / 1680 / 3360 -->
      <define name="MT9F002_SENSOR_WIDTH" value="2*480"/> <!-- 480 / 960 / 1920 / 3840 -->
      <define name="MT9F002_SENSOR_HEIGHT" value="2*1040"/> <!-- 420 / 840 / 1680 / 3360 -->
      <define name="MT9F002_OUTPUT_WIDTH" value="240"/> <!-- 480 / 960 / 1920 / 3840 -->
      <define name="MT9F002_OUTPUT_HEIGHT" value="520"/> <!-- 420 / 840 / 1680 / 3360 -->
      <define name="MT9F002_TARGET_FPS" value="30"/>
      <define name="MT9F002_TARGET_EXPOSURE" value="4"/>
      <define name="MT9F002_GAIN_GREEN1" value="8.0"/>
      <define name="MT9F002_GAIN_GREEN2" value="8.0"/>
      <define name="MT9F002_GAIN_RED" value="8.0"/>
      <define name="MT9F002_GAIN_BLUE" value="8.0"/>
      <define name="MT9F002_OUTPUT_SCALER" value="0.25"/>

      <!-- <configure name="CPU_LED" value="1"/>--> <!-- Change to whatever you like -->
      <module name="imu" type="disco">
      </module>

      <module name="actuators" type="disco"/>
      <!-- This GPS is a real ublox M8N, so setting can be saved, no need
      for ubx_ucenter one has can set it oneself since we have all kinds
      of nifty Galilleio setting we rather keep that, but for now, lazyness -->
      <module name="gps" type="ubx_ucenter"/>

      <module name="sonar_bebop">
        <define name="SENSOR_SYNC_SEND_SONAR"/>  <!-- Disable after testflights -->
      </module>

      <!--<module name="airspeed" type="ms45xx_i2c">
        <define name="MS45XX_I2C_DEV" value="i2c1"/>
        <define name="MS45XX_PRESSURE_RANGE" value="0.05"/>
      </module>-->

      <module name="airspeed" type="ms45xx_i2c">
        <!--Gives cut-off freq of 1/(2*pi*tau) in 1Hz -->
        <define name="MS45XX_LOWPASS_TAU" value="0.25"/> <!-- TODO: find optimum value for stock Disco -->
      </module>

      <module name="radio_control" type="sbus">
        <!-- <define name="RADIO_CONTROL_NB_CHANNEL" value="12"/> -->
      </module>

      <!-- <module name="sys_mon"/> --><!-- Enable if one want to check processor load for higher loop, nav, module etc. frequencies -->
      <!-- <module name="mag_calib_ukf"/> --><!-- New, and needs more testing, be careful with testflights if enabled -->

      <!-- Used for writing e.g highspeed accelometer and gyro values for needed tuning can be disabled when all is done -->

      <!--
      <module name="logger_file">
        <define name="FILE_LOGGER_PATH" value="/data/ftp/internal_000/Disco/logger"/>
      </module>
      -->

      <!-- For easier on desk testing transparent_usb, else transparent -->
      <!-- <module name="telemetry" type="transparent_usb"/>--> <!-- FIXME: gives compile error -->

      <module name="telemetry" type="transparent_udp"/>

     <!-------------- ---------------->
      <!-- By adding new kernel drivers to the Disco it is very well possible to
      use all kinds of external devices. A special page on how to use this is under development...-->

      <!-- E.g. a serial modem via FTDI cable on CHUCK Micro USB 2, testflights performed, all works well -->
      <!-- Possible if one connect other serial devices they present them as ttyACMx devices, if so try UART5 or UART6 -->
      <!--<module name="telemetry" type="transparent">--><!-- Or use type="xbee_api" for Digi Xbee modems -->
      <!--  <configure name="MODEM_PORT" value="UART2"/>
        <configure name="MODEM_BAUD" value="B9600"/>
      </module>-->

      <!-- <module name="extra_pprz_dl"/>--> <!-- e.g. for WiFi *AND* a LongRangeModem -->

      <module name="gps"           type="ublox">
        <define name="GPS_TIMEOUT" value="6"/>
      </module>

<!-- ================================= ALL OK same as OUAS Disco ======================= -->
      <module name="stabilization" type="int_quat"/>
      <module name="stabilization" type="rate"/>
      <module name="ahrs"          type="int_cmpl_quat">
        <define name="AHRS_GRAVITY_UPDATE_COORDINATED_TURN" value="TRUE"/>
      </module>

      <module name="ins"           type="hff_extended">
        <define name="USE_SONAR"                value="true"/>
        <define name="INS_SONAR_MAX_RANGE"      value="5"/>
        <define name="INS_SONAR_MIN_RANGE"      value="0.15"/>
        <define name="INS_SONAR_UPDATE_ON_AGL"  value="TRUE"/>
      </module>

      <module name="guidance"      type="delftacopter"/>
      <module name="guidance"      type="indi"/>
      <module name="gain_scheduling"/>
      <module name="heli_swashplate_mixing"/>
      <module name="disco_copter" />

      <module name="vision_outback">
        <configure name="VISION_OUTBACK_PORT" value="UART4"/>
      </module>


      <module name="geo_mag"/>

      <module name="air_data">
        <define name="AIR_DATA_CALC_AMSL_BARO" value="TRUE"/>
      </module>

          <!-- amount of time it take for the bat to trigger check -->
    <!-- to avoid bat low spike detection when strong pullup withch draws short sudden power-->
    <!-- TODO: specificaly test for Disco see if needed or which value -->
    <define name="BAT_CHECKER_DELAY" value="60" unit="s/10"/> <!-- in tenth of seconds per default use ELECTRICAL_PERIODIC_FREQ if you for some reason want it differently-->

    <!-- Only one main battery so CATASTROPHIC_BATTERY kill should be somewhat delayed -->
    <define name="CATASTROPHIC_BATTERY_KILL_DELAY" value="410" unit="s/10"/> <!-- in tenth of seconds for engine kill or in ELECTRICAL_PERIODIC_FREQ-->

      <define name="RC_LOST_MODE" value="AP_MODE_NAV" />
      <define name="RC_LOST_FBW_MODE" value="FBW_MODE_FAILSAFE"/><!-- Switch to Failsafe or to Autopilot on RC loss? -->
      <define name="RC_LOST_IN_AUTO_FBW_MODE" value="FBW_MODE_AUTO"/><!-- Switch to Failsafe with a working autopilot on RC loss? -->
      <define name="AP_LOST_FBW_MODE" value="FBW_MODE_MANUAL"/><!-- Switch to Failsafe or to Manual on AP loss? -->

    <module name="photogrammetry_calculator"/>

    <module name="video_thread"/>

    <module name="video_capture">
      <define name="VIDEO_CAPTURE_CAMERA" value="bottom_camera"/>
      <define name="VIDEO_CAPTURE_PATH" value="/data/ftp/internal_000/media/bottomcam"/>
    </module>

        <!-- Record video, take picture and stream video using build in Parrot commands -->
    <!--<module name="dc_ctrl_parrot_mykonos">
       <define name="DC_CTRL_PARROT_MYKONOS_CAMERA" value="front_camera"/>
       <define name="DC_CTRL_PARROT_MYKONOS_SYNC_SEND" value="TRUE"/>
    </module>-->

    <module name="video_exif"><!-- Embed State data, e.g. Position in Photos taken -->
    </module>

    <module name="digital_cam_video">
      <define name="DC_AUTOSHOOT_DISTANCE_INTERVAL" value="5.0" unit="s"/>
    </module>

    <!-- When flying multiple airframes -->
    <!--<module name="traffic_info">
    </module>-->

    <!--<module name="tcas">
    </module>-->

    </target>
  </firmware>

  <servos>
    <servo name="MOTOR" no="0" min="1000" neutral="1000" max="12500"/>
    <servo name="AILEVON_RIGHT" no="6" min="1900" neutral="1500" max="1100"/>
    <servo name="AILEVON_LEFT" no="1" min="1100" neutral="1500" max="1900"/>
  </servos>

  <section name="GCS">
    <define name="SPEECH_NAME" value="Disco Copter One"/>
    <define name="AC_ICON" value="flyingwing"/>
  </section>

  <!-- Direct RC commands conversion for FBW -->
  <rc_commands>
    <set command="THRUST"        value="@THROTTLE"/>
    <set command="COLLECTIVE"   value="@THROTTLE"/>
    <set command="ROLL"         value="@ROLL"/>
    <set command="PITCH"        value="@PITCH"/>
    <set command="YAW"          value="@YAW"/>
    <set command="ELEVATOR"     value="@PITCH"/>
    <set command="AILERON"      value="@ROLL"/>
  </rc_commands>

  <!-- Commands send from AP to FBW -->
  <commands>
    <axis name="THRUST"     failsafe_value="0"/>
    <axis name="ROLL"       failsafe_value="0"/>
    <axis name="PITCH"      failsafe_value="0"/>
    <axis name="YAW"        failsafe_value="0"/>
    <axis name="COLLECTIVE" failsafe_value="-9600"/>
    <axis name="ELEVATOR"   failsafe_value="0"/>
    <axis name="AILERON"    failsafe_value="0"/>
  </commands>

  <!-- Swashplate mixing HR120 (1 Back, 2 Front at 120 degree) -->
  <section name="MIXING" prefix="SW_MIXING_">
    <define name="TYPE"       value="HR120"/>
    <define name="TRIM_ROLL"  value="0"/>
    <define name="TRIM_PITCH" value="0"/>
    <define name="TRIM_COLL"  value="0"/>
  </section>

  <!-- Throttle curve RPM controller -->
  <section name="THROTTLE_CURVE" prefix="THROTTLE_CURVE_">
    <define name="RPM_FB_P"       value="3.0"/>
    <define name="RPM_FB_I"       value="3.0"/>
    <define name="RPM_INC_LIMIT"  value="2048"/>
  </section>

  <!-- Convert commands to PWM -->
  <command_laws>
    <!-- Run swashplate mixing and define variables -->
    <call fun="swashplate_mixing_run(values)"/>
    <let var="th_hold"          value="LessThan(RadioControlValues(RADIO_TH_HOLD), -4800)"/>

    <!-- Output the PWM values -->
    <set servo="MOTOR"       value="($th_hold? -9600 : @THRUST)"/>
    <set servo="AILEVON_RIGHT"     value="@ELEVATOR - @AILERON"/>
    <set servo="AILEVON_LEFT"    value="@ELEVATOR + @AILERON"/>
  </command_laws>

  <!-- T-Motor 190kv with 24.2 inch prop -->
  <heli_curves>
    <curve throttle="0,6000,0,0,0" collective="-9600,-8150,-6700,-5250,-3800"/> <!-- Spinup curve -->
    <curve throttle="7300,7800,8300" rpm="2800,2800,2800" collective="-9600,-6500,-2300"/><!-- Hover curve RPM controlled -->
    <curve throttle="7300,7800,8300" rpm="2800,2800,2800" collective="-9600,-6500,-2300"/><!-- Hover curve RPM controlled -->
    <curve throttle="8600,8600,8600,8600,9600" collective="-9600,-9600,-7470,-3770,30"/><!-- Forward inefficient curve -->
    <curve throttle="5000,5000,5000,5000,5300" collective="-9600,-6300,-3000,700,4500"/><!-- Forward curve -->
  </heli_curves>

  <section name="MISC">
    <define name="NAV_CLIMB_VSPEED" value="3.0"/>
    <define name="NAV_DESCEND_VSPEED" value="-3.5"/>
    <define name="NAV_LINE_FOLLOWING_DIST" value="160.0"/>
    <define name="ARRIVED_AT_WAYPOINT" value="50"/>
    <define name="ARRIVED_AT_WAYPOINT_HOVER" value="5"/>
    <define name="NO_RC_THRUST_LIMIT" value="TRUE"/>
    <define name="NO_GPS_LOST_WITH_RC_VALID" value="TRUE"/>
    <define name="APVoltageOfAdc(adc)" value="(adc*0.0061456 + 0.321688)"/><!-- TODO: Needed ?-->
    <define name="TRANSITION_MAX_OFFSET" value="0.0" unit="deg"/>
    <define name="USE_EARTH_BOUND_RC_SETPOINT" value="TRUE"/>
  </section>

  <section name="IMU" prefix="IMU_">
    <!-- ***************** MAGNETO *****************-->
    <!-- Replace these values with your own calibration, on the correct sensor -->
    <define name="ACCEL_X_NEUTRAL" value="-72"/>
    <define name="ACCEL_Y_NEUTRAL" value="-3"/>
    <define name="ACCEL_Z_NEUTRAL" value="16"/>

    <define name="ACCEL_X_SENS" value="4.88551667342" integer="16"/>
    <define name="ACCEL_Y_SENS" value="4.87127085018" integer="16"/>
    <define name="ACCEL_Z_SENS" value="4.81849471549" integer="16"/>

    <define name="MAG_X_NEUTRAL" value="4"/>
    <define name="MAG_Y_NEUTRAL" value="-111"/>
    <define name="MAG_Z_NEUTRAL" value="-515"/>
    <define name="MAG_X_SENS" value="6.99930117435" integer="16"/>
    <define name="MAG_Y_SENS" value="6.85616692786" integer="16"/>
    <define name="MAG_Z_SENS" value="7.25614648348" integer="16"/>

    <!-- Should be same for everyone -->
    <define name="MAG_X_CURRENT_COEF" value="0.000321738038902"/>
    <define name="MAG_Y_CURRENT_COEF" value="-0.000820010304048"/>
    <define name="MAG_Z_CURRENT_COEF" value="0.00139218924958"/>

    <define name="BODY_TO_IMU_PHI"   value="0." unit="deg"/>
    <define name="BODY_TO_IMU_THETA" value="0." unit="deg"/>
    <define name="BODY_TO_IMU_PSI"   value="0." unit="deg"/>

    <!-- Rotate magneto compared to imu -90 degress -->
    <define name="TO_MAG_PHI"   value="0." unit="deg"/>
    <define name="TO_MAG_THETA" value="0." unit="deg"/>
    <define name="TO_MAG_PSI"   value="90." unit="deg"/>

    <!-- Change sign to fix axis -->
    <define name="MAG_X_SIGN" value="1"/>
    <define name="MAG_Y_SIGN" value="1"/>
    <define name="MAG_Z_SIGN" value="1"/>
  </section>

  <section name="AHRS" prefix="AHRS_">
    <define name="GPS_SPEED_IN_NEGATIVE_Z_DIRECTION" value="true"/>

    <!--This airframe vibrates a lot, which causes accel measurements in excess of 1g continuously-->
    <define name="GRAVITY_HEURISTIC_FACTOR" value="0"/>
    <define name="PROPAGATE_LOW_PASS_RATES" value="TRUE"/>
    <define name="PROPAGATE_LOW_PASS_RATES_MUL" value="19"/>
    <define name="PROPAGATE_LOW_PASS_RATES_DIV" value="20"/>

    <!-- values used if no GPS fix, on 3D fix is update by geo_mag module -->
    <define name="H_X" value="0.5293"/>
    <define name="H_Y" value="0.0971"/>
    <define name="H_Z" value="-0.8429"/>
  </section>

  <!-- The advance angles for the rotorhead, P and Q couplings -->
  <section name="STABILIZATION" prefix="STABILIZATION_">
    <define name="ADVANCE_ANGLE_P" value="0.9"/>
    <define name="ADVANCE_ANGLE_Q" value="0.5"/>
  </section>

  <!-- Rate controller gains for development -->
  <section name="STABILIZATION_RATE" prefix="STABILIZATION_RATE_">
    <!-- setpoints -->
    <define name="SP_MAX_P" unit="deg/s" value="280"/>
    <define name="SP_MAX_Q" unit="deg/s" value="350"/>
    <define name="SP_MAX_R" unit="deg/s" value="200"/>
    <define name="DEADBAND_P" value="20"/>
    <define name="DEADBAND_Q" value="20"/>
    <define name="DEADBAND_R" value="200"/>

    <!-- feedback -->
    <define name="GAIN_P" value="880"/>
    <define name="GAIN_Q" value="880"/>
    <define name="GAIN_R" value="4100"/>

    <!-- integrator gains -->
    <define name="IGAIN_P" value="0"/>
    <define name="IGAIN_Q" value="0"/>
    <define name="IGAIN_R" value="50"/>
  </section>

  <!-- Attitude controller gains in hover (are they used????) -->
  <section name="STABILIZATION_ATTITUDE" prefix="STABILIZATION_ATTITUDE_">
    <!-- setpoints -->
    <define name="SP_MAX_PHI" value="60." unit="deg"/>
    <define name="SP_MAX_THETA" value="60." unit="deg"/>
    <define name="SP_MAX_R" value="150." unit="deg/s"/>
    <define name="DEADBAND_R" value="200"/>

    <!-- reference -->
    <define name="REF_OMEGA_P" value="500" unit="deg/s"/>
    <define name="REF_ZETA_P" value="0.85"/>
    <define name="REF_MAX_P" value="300." unit="deg/s"/>
    <define name="REF_MAX_PDOT" value="RadOfDeg(7000.)"/>
    <define name="REF_OMEGA_Q" value="800" unit="deg/s"/>
    <define name="REF_ZETA_Q" value="0.85"/>
    <define name="REF_MAX_Q" value="300." unit="deg/s"/>
    <define name="REF_MAX_QDOT" value="RadOfDeg(7000.)"/>
    <define name="REF_OMEGA_R" value="500" unit="deg/s"/>
    <define name="REF_ZETA_R" value="0.85"/>
    <define name="REF_MAX_R" value="180." unit="deg/s"/>
    <define name="REF_MAX_RDOT" value="RadOfDeg(1800.)"/>

    <!-- feedback -->
    <define name="PHI_PGAIN" value="854"/>
    <define name="PHI_DGAIN" value="369"/>
    <define name="PHI_IGAIN" value="180"/>
    <define name="THETA_PGAIN" value="1605"/>
    <define name="THETA_DGAIN" value="293"/>
    <define name="THETA_IGAIN" value="180"/>
    <define name="PSI_PGAIN" value="500"/>
    <define name="PSI_DGAIN" value="1360"/>
    <define name="PSI_IGAIN" value="151"/>

    <!-- feedforward -->
    <define name="PHI_DDGAIN" value="0"/>
    <define name="THETA_DDGAIN" value="0"/>
    <define name="PSI_DDGAIN" value="0"/>
  </section>

  <!-- Gain sets for hover and forward based on the throttle curve -->
  <section name="GAIN_SETS">
    <define name="NUMBER_OF_GAINSETS" value="2"/>
    <define name="SCHEDULING_VARIABLE" value="throttle_curve.mode"/>
    <define name="SCHEDULING_POINTS" value="{2.4, 2.5}"/>
    <define name="SCHEDULING_VARIABLE_FRAC" value="0"/>

    <define name="PHI_P" value="{854, 458}"/>
    <define name="PHI_D" value="{369, 293}"/>
    <define name="PHI_I" value="{180, 0}"/>
    <define name="PHI_DD" value="{0, 0}"/>

    <define name="THETA_P" value="{990, 850}"/>
    <define name="THETA_D" value="{265, 160}"/>
    <define name="THETA_I" value="{180, 200}"/>
    <define name="THETA_DD" value="{0, 0}"/>

    <define name="PSI_P" value="{500, 800}"/>
    <define name="PSI_D" value="{1360, 432}"/>
    <define name="PSI_I" value="{151, 151}"/>
    <define name="PSI_DD" value="{0, 0}"/>
  </section>

  <!-- Vertical gains in hover mode -->
  <section name="GUIDANCE_V" prefix="GUIDANCE_V_">
    <define name="HOVER_KP"    value="75"/>
    <define name="HOVER_KD"    value="40"/>
    <define name="HOVER_KI"    value="12"/>
    <define name="NOMINAL_HOVER_THROTTLE" value="0.61"/>
    <define name="ADAPT_THROTTLE_ENABLED" value="FALSE"/>
    <define name="REF_MAX_ZD" value="1.5"/>
  </section>

  <!-- INDI guidance controller for hover mode -->
  <section name="GUIDANCE_INDI" prefix="GUIDANCE_INDI_">
    <define name="POS_GAIN_XY" value="0.3"/>
    <define name="POS_GAIN_Z" value="0.3"/>
    <define name="SPEED_GAIN_XY" value="1.0"/>
    <define name="SPEED_GAIN_Z" value="1.0"/>
    <define name="FILTER_CUTOFF" value="0.8"/>
  </section>

  <!-- Horizontal gains in hover mode -->
  <section name="GUIDANCE_H" prefix="GUIDANCE_H_">
    <define name="MAX_PHI" value="17" unit="deg"/>
    <define name="MAX_THETA" value="23" unit="deg"/>
    <define name="USE_SPEED_REF" value="TRUE"/>
    <define name="REF_MAX_SPEED" value="15" />
    <define name="PGAIN" value="20"/>
    <define name="DGAIN" value="40"/>
    <define name="AGAIN" value="30"/>
    <define name="IGAIN" value="10"/>
  </section>

  <!-- gains for delftacopter control -->
  <section name="DC_" prefix="DC_">
    <define name="HOVER_THROTTLE_CURVE" value="2"/>
    <define name="TRANSITION_THROTTLE_CURVE" value="3"/>
    <define name="FORWARD_THROTTLE_CURVE" value="4"/>
    <define name="TRANSITION_TIME" value="2"/>
    <define name="TRANSITION_THROTTLE_TO_FORWARD" value="8500"/>
    <define name="TRANSITION_THROTTLE_TO_HOVER" value="4800"/>
  </section>

  <!-- Gains for forward mode -->
  <section name="DC_FORWARD" prefix="DC_FORWARD_">
    <define name="MAX_AIRSPEED" value="18.0"/>
    <define name="NOMINAL_THRUST" value="7400"/>
    <define name="VERTICAL_PGAIN" value="0.1"/>
    <define name="VERTICAL_DGAIN" value="0.015"/>
    <define name="VERTICAL_LOW_AIRSPEED" value="17.0"/>
    <define name="VERTICAL_LOW_AIRSPEED_PITCH_GAIN" value="0.0"/>
    <define name="MAX_TURN_BANK" value="35.0"/>
    <define name="TURN_BANK_GAIN" value="0.5"/>
    <define name="PITCH_OF_ROLL" value="0.02"/>
    <define name="THROTTLE_FROM_PITCH_UP" value="50.0"/>
    <define name="MIN_PITCH" value="-15.0"/>
    <define name="MAX_PITCH" value="10.0"/>
    <define name="MAX_PSI" value="20.0"/>
    <define name="ACC_Y_FILTER_CUTOFF_HZ" value="0.5"/>
    <define name="E_PSI_DEG_FROM_ACC_Y" value="0"/>

    <define name="ROLL_PGAIN" value="3000.0"/>
    <define name="ROLL_DGAIN" value="200.0"/>
    <define name="ROLL_IGAIN" value="0.2"/>
    <define name="ROLL_TRIM" value="0.0"/>
    <define name="PITCH_PGAIN" value="2500.0"/>
    <define name="PITCH_DGAIN" value="1000.0"/>
    <define name="PITCH_IGAIN" value="0.5"/>
    <define name="PITCH_TRIM" value="200.0"/>
    <define name="K_FF_TO_YAW" value="600.0"/> <!-- order of magnitude -->
    <define name="ADVANCE_P" value="1.1"/>
    <define name="ADVANCE_Q" value="1.1"/>
    <define name="PITCH_SWP" value="0.0"/>
  </section>

  <!-- Radio control specific switches -->
  <section name="RADIO" prefix="RADIO_">
    <define name="TH_HOLD"    value="RADIO_AUX1"/> <!-- Throttle hold in command laws -->
    <define name="FMODE"      value="RADIO_AUX2"/> <!-- Throttle curve select -->
    <define name="FBW_MODE"   value="RADIO_AUX3"/> <!-- Switch between AP and FBW control -->
  </section>

  <!-- Different autopilot modes for the RC -->
  <section name="AUTOPILOT">
    <define name="MODE_MANUAL" value="AP_MODE_RC_DIRECT"/>
    <define name="MODE_AUTO1"  value="AP_MODE_FORWARD"/>
    <define name="MODE_AUTO2"  value="AP_MODE_NAV"/>
  </section>

   <!-- ******************* PHOTOGRAMMETRY ************************** -->
  <section name="PHOTOGRAMMETRY" prefix="PHOTOGRAMMETRY_">
    <!-- In case you add another camera to your aircraft modify them for this camera -->
    <!-- Values for the default Disco bottom cam. -->
    <!-- Active Array: 640(H) x 480(V) 2xbined -->
    <define name="FOCAL_LENGTH" value="2.5" unit="mm"/>

    <define name="SENSOR_WIDTH" value="2.304" unit="mm"/> <!-- In direction of the wingstip -->
    <define name="SENSOR_HEIGHT" value="1.728" unit="mm"/> <!-- In direction of the plane's nose -->

    <define name="PIXELS_WIDTH" value="320"/><!-- can be cropped to 240-->

    <!-- Photogrammetry Parameters. Can also be defined in a flightplan instead
    <define name="OVERLAP" value="0.3" unit="%"/>
    <define name="SIDELAP" value="0.2" unit="%"/>
    <define name="RESOLUTION" value="50" unit="mm pixel projection"/>
    -->

    <!-- Flight bounds Parameters when photoscanning depents on your missions goas or restriction rules at eg competitions -->
    <define name="HEIGHT_MIN" value="50." unit="m"/><!-- TODO: for default bottomcam -->
    <define name="HEIGHT_MAX" value="120." unit="m"/><!-- TODO: for default bottomcam -->
    <define name="RADIUS_MIN" value="70." unit="m"/><!-- TODO: for default bottomcam -->
  </section>

  <!-- ************************* SONAR ************************* -->
  <section name="SONAR" prefix="SONAR_">
    <define name="SCALE" value="0.016775" integer="16"/>
    <define name="OFFSET" value="0.03" unit="m"/> <!-- Landing gear height to tarmac, well ~0 m with this flyingwing -->
    <define name="MAX_RANGE" value="9.0" unit="m"/>
    <define name="MIN_RANGE" value="0.18" unit="m"/>
  </section>

  <!-- ************************* MAG_CALIB_UKF ************************* -->
  <section name="MAG_CALIB_UKF" prefix="MAG_CALIB_UKF_">
    <define name="HOTSTART" value="TRUE"/><!-- for faster convergence flights to flight -->
    <define name="HOTSTART_SAVE_FILE" value="/data/ftp/internal_000/mag_ukf_calib.txt"/>
    <define name="NORM" value="1.0f"/>
    <define name="NOISE_RMS" value="5e-2f"/>
    <define name="GEO_MAG_TIMEOUT" value="0"/>
    <define name="INITIAL_STATE" value="0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0" type="float[]"/>
    <define name="VERBOSE" value="TRUE"/><!-- Disable after testing -->
  </section>

  <!-- **************************** BAT ****************************** -->
  <section name="BAT">
    <!-- <define name="MAX_BAT_CAPACITY" value="2700" unit="mAh"/> --> <!-- The Default Parrot Disco 2700mAh battery -->
    <define name="MAX_BAT_CAPACITY" value="5200" unit="mAh"/> <!-- 3rd party battery, needs enlarged battery bay -->
    <define name="MilliAmpereOfAdc(_adc)" value="(_adc-632)*4.14"/> <!-- TODO: calibrate even better -->
    <!-- tested at V 11.7 the avg -->  <!-- 1idel RPM then 1.0A half throttle 4A-->
    <define name="MILLIAMP_AT_IDLE_THROTTLE" value="600" unit="mA"/>  <!-- 500mA, with additional RC receiver ~600mA -->
    <define name="MILLIAMP_AT_FULL_THROTTLE" value="11000" unit="mA"/> <!-- At 11.7 10.6 A at 12.2v 11.0A rounded then to 11000 to be at safe side-->

    <define name="MAX_BAT_LEVEL" value="12.6" unit="V"/> <!-- 3S lipo 3x4.2 = 12.6 -->
    <define name="LOW_BAT_LEVEL" value="10.6" unit="V"/>
    <define name="CRITIC_BAT_LEVEL" value="10.0" unit="V"/>
    <define name="CATASTROPHIC_BAT_LEVEL" value="9.3" unit="V"/> <!-- TODO: test when AP board switches off -->
    <define name="MIN_BAT_LEVEL" value="9.0" unit="V"/><!-- Get rid if this one maybe? -->
  </section>

</airframe>
